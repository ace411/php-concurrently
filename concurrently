#! /usr/bin/env php
<?php

/**
 * Library .bin file
 * primary executable script file $ concurrently [options] [arguments]
 *
 * @package chemem/php-concurrently
 * @author Lochemem Bruno Michael
 * @license Apache-2.0
 */

require_once __DIR__ .'/bootstrap.php';

use React\EventLoop\Loop;
use Rx\Scheduler;
use Rx\Scheduler\EventLoopScheduler;

use function Chemem\Bingo\Functional\equals;
use function Chemem\Concurrently\Proc\applyColor;
use function Chemem\Concurrently\Proc\execute;

// terminate process if it is running outside a console environment
if (!equals(PHP_SAPI, 'cli')) {
  $writable->write(
    \sprintf(
      "%s\n",
      applyColor(
        'Sorry, php-concurrently only runs in a console environment',
        'orange'
      )
    )
  );

  // stop the event loop
  Loop::get()->stop();
  exit();
}

// convert errors to exceptions
\set_error_handler(
  function (...$args) {
    throw new \Exception($args[1], $args[0]);
  }
);

// set general exception handler
\set_exception_handler(
  function () use ($writable) {
    $writable->write(
      \sprintf(
        "%s\n", 
        applyColor(
          'Sorry, an error occurred inside concurrently', 
          'red'
        )
      ) 
    );
  }
);

Scheduler::setDefaultFactory(
  function () {
    return new EventLoopScheduler(Loop::get());
  }
);

// concurrently run several processes
$result = execute(
  $cmd->options,
  $cmd->args['processes'] ?? '',
  $writable
);
